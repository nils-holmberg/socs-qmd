---
execute:
  eval: true
  echo: true
  output: true
#  warning: false
jupyter: python3
#engine: jupyter
#engine: knitr
format:
  html:
    toc: false
    number-sections: false
    colorlinks: true
    theme: default
title: scom-skom12 colab
#subtitle: "Inclusive organizational communication and cognitive effects in online users"
#bibliography: "../log/refs/refs.bib"
#csl: "/home/sol-nhl/rnd/d/cca-cce/log/ref/apa-single-spaced.csl"
#link-citations: yes
---

```{python}
#| echo: true
#| output: true
#import os
#if not "/qmd" in os.getcwd(): os.chdir("qmd/")

import numpy as np
import pandas as pd
pd.set_option("display.max_rows", 10)

#conda install -c conda-forge tabulate
from tabulate import tabulate
#from IPython.display import display
#from IPython.display import Markdown

#conda install -c conda-forge siuba plotnine
#pip install siuba plotnine
#from siuba import *
#from siuba.dply.vector import row_number, n, lag
#from siuba.dply.vector import *
import siuba as si
#from plotnine import *
import plotnine as p9

# read csv
df = pd.read_csv("../csv/data-230328.csv", sep="\t", header=0)

# dependent variable, fix column name
#df["JagskulleviljaköpabolånfrånSvenskaLånebanken"]
df.rename(columns={df.columns[24]:"pi_some"}, inplace=True)

# get descriptive stats for variable
df["pi_some"].describe()
#df >> si.select(0,24) >> si.head()
```

```{python}
#| eval: true
#| echo: true
#| output: true
# get histogram plot
hp = (
p9.ggplot(data=df)
+ p9.geom_histogram(p9.aes(x='pi_some'), fill='#c22d6d', bins=7)
)
hp
```

## 230404

```{python}
#| eval: true
#| echo: true
#| output: true
##| include: false
from scipy.stats import ttest_ind
from scipy.stats import sem

# display data
dfa = df >> si.select(si._.condition, 1) >> si.head(5)

# plot counts
p9.ggplot(df) + \
p9.geom_bar(
    mapping = p9.aes(x = 'condition'), 
    stat = 'count'
  )

# select, aggregate columns
tmp = df >> si.select(0,24)
tmp = df.groupby(['condition'])['pi_some'].agg([np.mean, sem]).reset_index()
tmp >> si.head()
```

```{python}
#| eval: true
#| echo: true
#| output: true
# bar plot means
bp = (
p9.ggplot(data=tmp)
+ p9.geom_bar(mapping=p9.aes(x="condition", y="mean"), stat='identity', fill=np.where(tmp['condition']=='control.tsv', '#80797c', '#c22d6d'))
+ p9.geom_errorbar(mapping=p9.aes(x="condition", ymin='mean-sem', ymax='mean+sem'))
+ p9.labs(title="purchase intent by condition", x='condition', y='mean pi')
)
bp
```

## 230403

```{python}
#| echo: false
#| output: asis
# get dataset
#conda install -c conda-forge pyreadstat
df = pd.read_spss("../csv/data-230328.sav")

# column names
#print(list(df))

# display data
dfa = df >> si.select(si._.condition, 1) >> si.head(5)
print(dfa.to_markdown())

# write to csv
df.to_csv("../csv/data-230328.csv", sep="\t", header=True, index=False)

# read csv
#df = pd.read_csv("../csv/data-230328.csv", sep="\t", header=None)
```

## 230402






